<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="warning" file="HDLCompiler" num="413" delta="new" >"/home/nmalpicf/Dropbox/UNAL/Semestre_7/4_Digital_I/Information_Point/XBee_Tx/XBee_Code/Final_Version/Final_Version_Code_Nexys3/Counter.v" Line 21: Result of <arg fmt="%d" index="1">15</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">14</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="new" >"/home/nmalpicf/Dropbox/UNAL/Semestre_7/4_Digital_I/Information_Point/XBee_Tx/XBee_Code/Final_Version/Final_Version_Code_Nexys3/ControllerTx.v" Line 78: Result of <arg fmt="%d" index="1">5</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">4</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="new" >"/home/nmalpicf/Dropbox/UNAL/Semestre_7/4_Digital_I/Information_Point/XBee_Tx/XBee_Code/Final_Version/Final_Version_Code_Nexys3/ControllerTx.v" Line 31: Assignment to <arg fmt="%s" index="1">NextState</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="872" delta="new" >"/home/nmalpicf/Dropbox/UNAL/Semestre_7/4_Digital_I/Information_Point/XBee_Tx/XBee_Code/Final_Version/Final_Version_Code_Nexys3/Compare.v" Line 10: Using initial value of <arg fmt="%s" index="1">A</arg> since it is never assigned
</msg>

<msg type="warning" file="HDLCompiler" num="872" delta="new" >"/home/nmalpicf/Dropbox/UNAL/Semestre_7/4_Digital_I/Information_Point/XBee_Tx/XBee_Code/Final_Version/Final_Version_Code_Nexys3/Compare.v" Line 11: Using initial value of <arg fmt="%s" index="1">B</arg> since it is never assigned
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="new" >"/home/nmalpicf/Dropbox/UNAL/Semestre_7/4_Digital_I/Information_Point/XBee_Tx/XBee_Code/Final_Version/Final_Version_Code_Nexys3/Compare.v" Line 24: Result of <arg fmt="%d" index="1">30</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">29</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="new" >"/home/nmalpicf/Dropbox/UNAL/Semestre_7/4_Digital_I/Information_Point/XBee_Tx/XBee_Code/Final_Version/Final_Version_Code_Nexys3/CounterII.v" Line 19: Result of <arg fmt="%d" index="1">15</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">14</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/nmalpicf/Dropbox/UNAL/Semestre_7/4_Digital_I/Information_Point/XBee_Tx/XBee_Code/Final_Version/Final_Version_Code_Nexys3/Data.v" Line 15: Signal &lt;<arg fmt="%s" index="1">date</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/nmalpicf/Dropbox/UNAL/Semestre_7/4_Digital_I/Information_Point/XBee_Tx/XBee_Code/Final_Version/Final_Version_Code_Nexys3/Data.v" Line 16: Signal &lt;<arg fmt="%s" index="1">counter</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/nmalpicf/Dropbox/UNAL/Semestre_7/4_Digital_I/Information_Point/XBee_Tx/XBee_Code/Final_Version/Final_Version_Code_Nexys3/Data.v" Line 18: Signal &lt;<arg fmt="%s" index="1">Reg_Out</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/nmalpicf/Dropbox/UNAL/Semestre_7/4_Digital_I/Information_Point/XBee_Tx/XBee_Code/Final_Version/Final_Version_Code_Nexys3/Data.v" Line 22: Signal &lt;<arg fmt="%s" index="1">Rx</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/nmalpicf/Dropbox/UNAL/Semestre_7/4_Digital_I/Information_Point/XBee_Tx/XBee_Code/Final_Version/Final_Version_Code_Nexys3/Data.v" Line 23: Signal &lt;<arg fmt="%s" index="1">counter</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="new" >"/home/nmalpicf/Dropbox/UNAL/Semestre_7/4_Digital_I/Information_Point/XBee_Tx/XBee_Code/Final_Version/Final_Version_Code_Nexys3/Data.v" Line 23: Result of <arg fmt="%d" index="1">5</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">4</arg>-bit target.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">data&lt;7&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">data&lt;6&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">data&lt;5&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">data&lt;4&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">data&lt;3&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">data&lt;2&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">data&lt;1&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">data&lt;0&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">counter&lt;3&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">counter&lt;2&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">counter&lt;1&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">counter&lt;0&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">Reg_Out&lt;7&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">Reg_Out&lt;6&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">Reg_Out&lt;5&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">Reg_Out&lt;4&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">Reg_Out&lt;3&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">Reg_Out&lt;2&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">Reg_Out&lt;1&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">Reg_Out&lt;0&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">signal</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="1710" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">StartBit</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">PlotCoder</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">StartBit</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">PlotCoder</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="3002" delta="new" >This design contains one or more registers/latches that are directly
incompatible with the <arg fmt="%s" index="1">Spartan6</arg> architecture. The two primary causes of this is
either a register or latch described with both an asynchronous set and
asynchronous reset, or a register or latch described with an asynchronous
set or reset which however has an initialization value of the opposite 
polarity (i.e. asynchronous reset with an initialization value of 1).
 While this circuit can be built, it creates a sub-optimal implementation
in terms of area, power and performance. For a more optimal implementation
Xilinx highly recommends one of the following:

       1) Remove either the set or reset from all registers and latches
          if not needed for required functionality
       2) Modify the code in order to produce a synchronous set
          and/or reset (both is preferred)
       3) Ensure all registers have the same initialization value as the
          described asynchronous set or reset polarity
       4) Use the -async_to_sync option to transform the asynchronous
          set/reset to synchronous operation
          (timing simulation highly recommended when using this option)
</msg>

<msg type="warning" file="Xst" num="1293" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">Compare/counter_28</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Top_XBee</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">Compare/counter_27</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Top_XBee</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">Compare/counter_26</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Top_XBee</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">Compare/counter_25</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Top_XBee</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">Compare/counter_24</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Top_XBee</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">Compare/counter_23</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Top_XBee</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">Compare/counter_22</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Top_XBee</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">Compare/counter_21</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Top_XBee</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">Compare/counter_20</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Top_XBee</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">Compare/counter_19</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Top_XBee</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">Compare/counter_18</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Top_XBee</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1896" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">Compare/counter_17</arg>&gt; has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">Top_XBee</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="info" file="Xst" num="2169" delta="new" >HDL ADVISOR - Some clock signals were not automatically buffered by XST with BUFG/BUFR resources. Please use the buffer_type constraint in order to insert these buffers to the clock signals to help prevent skew problems.
</msg>

</messages>

